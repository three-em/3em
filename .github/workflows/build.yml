name: build

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Awarnings

jobs:
  build:
    name: ${{ matrix.os }} / ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - os: ubuntu-latest
            target: aarch64-linux-android

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: macos-latest
            target: x86_64-apple-darwin

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          default: true

      - name: Use Cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: contains(matrix.target, 'aarch64')

      - name: Get Build Name
        id: zip
        run: echo "::set-output name=name::three_em-${{ matrix.target }}-${{ github.ref == 'refs/heads/main' && 'canary' || 'dev' }}-$(git rev-parse --short HEAD)"

      - name: Upload Canary Builds
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.zip.outputs.name }}
          path: |
            target/${{ matrix.target }}/three_em
            target/${{ matrix.target }}/three_em.exe
          if-no-files-found: error
          retention-days: 7
