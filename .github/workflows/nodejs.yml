name: napi

on:
  push:
    branches: [main]
  pull_request:

env:
  DEBUG: napi:*
  APP_NAME: three_em_node
  MACOSX_DEPLOYMENT_TARGET: '10.13'

jobs:
  build:
    name: build / ${{ matrix.target }} / node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        node: [14, 16, 17]
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            arch: x64
            build: yarn build; strip -x *.node

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x64
            build: yarn build

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: x64
            build: yarn build

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: yarn
          architecture: ${{ matrix.arch }}

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          default: true

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@v1

      - name: Install Node Dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./js/napi

      - name: Build
        working-directory: ./js/napi
        run: ${{ matrix.build }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ./js/napi/${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  test:
    name: test / ${{ matrix.target }} / node ${{ matrix.node }}
    needs: [build]
    runs-on: ${{ matrix.settings.host }}

    strategy:
      fail-fast: false
      matrix:
        node: [14, 16, 17]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: yarn

      - name: Install Node Dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./js/napi

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: bindings-${{ matrix.target }}
          path: ./js/napi

      - name: List packages
        working-directory: ./js/napi
        run: ls -R .

      - name: Test bindings
        working-directory: ./js/napi
        run: yarn test

  publish:
    name: publish
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: yarn

      - name: Install Node Dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./js/napi

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./js/napi/artifacts

      - name: Move artifacts
        working-directory: ./js/napi
        run: yarn artifacts

      - name: List packages
        working-directory: ./js/napi
        run: ls -R ./npm
        shell: bash

      - name: Publish
        working-directory: ./js/napi
        run: |
          if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
