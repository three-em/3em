/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface ExecuteContractResult {
  state: any
  result: any
  validity: Record<string, any>
  exmContext: any
  updated: boolean
  errors: Record<string, string>
}
export interface ExecuteConfig {
  host: string
  port: number
  protocol: string
}
export interface Tag {
  name: string
  value: string
}
export interface Block {
  height: string
  indepHash: string
  timestamp: string
}
export interface SimulateInput {
  id: string
  owner: string
  quantity: string
  reward: string
  target?: string | undefined | null
  tags: Array<Tag>
  block?: Block | undefined | null
  input: string
}
export const enum SimulateContractType {
  JAVASCRIPT = 0,
  WASM = 1
}
export interface ContractSource {
  contractSrc: Buffer
  contractType: SimulateContractType
}
export interface SimulateExecutionContext {
  contractId: string
  maybeContractSource?: ContractSource | undefined | null
  interactions: Array<SimulateInput>
  contractInitState?: string | undefined | null
  maybeConfig?: ExecuteConfig | undefined | null
  maybeCache?: boolean | undefined | null
  maybeBundledContract?: boolean | undefined | null
  maybeSettings?: Record<string, any> | undefined | null
  maybeExmContext?: string | undefined | null
}
export function simulateContract(context: SimulateExecutionContext): Promise<ExecuteContractResult>
export function executeContract(tx: string, maybeHeight?: number | undefined | null, maybeConfig?: ExecuteConfig | undefined | null): Promise<ExecuteContractResult>
